--08-09-2022--

SELECT * FROM  S_HREMPLOYEES sh2 WHERE  DEPARTMENT_ID =120  

select sum(salary) as salary from S_HREMPLOYEES sh  

select avg(salary) as avg, JOB_ID from S_HREMPLOYEES sh group by JOB_ID 

select min(salary) as Minimun, max(salary) as maximum, DEPARTMENT_ID  from S_HREMPLOYEES sh group by DEPARTMENT_ID 

SELECT count(1) ,DEPARTMENT_ID  from S_HREMPLOYEES sh group by DEPARTMENT_ID  ;


SELECT count(1), DEPARTMENT_ID from S_HREMPLOYEES sh WHERE DEPARTMENT_ID  is NOT NULL 
GROUP BY DEPARTMENT_ID having COUNT(1)>1
ORDER BY DEPARTMENT_ID 

---dense rank---

SELECT * FROM (
SELECT DENSE_RANK () OVER (PARTITION  BY DEPARTMENT_ID ORDER BY SALARY DESC) AS DRNK,SALARY,DEPARTMENT_ID
FROM DBO.S_HREMPLOYEES sh 
--WHERE DEPARTMENT_ID=90
)X
WHERE DRNK=2



SELECT * FROM S_HRLOCATIONS sh 
select * FROM S_HRCOUNTRIES sh2 

--INNER QUERY 

SELECT
	SH.EMPLOYEE_ID,
	SH2.DEPARTMENT_NAME,
	FIRST_NAME ,
	LAST_NAME,sh2.DEPARTMENT_ID 
FROM
	DBO.S_HREMPLOYEES sh ,
	DBO.S_HRDEPARTMENTS sh2
WHERE
	SH.DEPARTMENT_ID = SH2.DEPARTMENT_ID;


-- INNER JOIN WITH INNER KEY WORD 




SELECT
	SH.EMPLOYEE_ID,
	SH2.DEPARTMENT_NAME,
	FIRST_NAME ,
	LAST_NAME
FROM
	DBO.S_HREMPLOYEES sh
INNER JOIN DBO.S_HRDEPARTMENTS sh2 
ON
	SH.DEPARTMENT_ID = SH2.DEPARTMENT_ID;



---LEFT JOIN QUE

SELECT
	*
FROM
	DBO.S_HREMPLOYEES sh ,
	DBO.S_HRDEPARTMENTS sh2,
	DBO.S_HRLOCATIONS sh3,
	DBO.S_HRCOUNTRIES sh4
WHERE
	SH.DEPARTMENT_ID = SH2.DEPARTMENT_ID
AND SH2.LOCATION_ID=SH3.lOCATION_ID AND SH3.COUNTRY_ID=SH4.COUNTRY_ID;



CREATE TABLE ANS_COURSE
(
COURSE_ID INTEGER PRIMARY KEY,
COURSE_NAME VARCHAR(20) NOT NULL
);

CREATE TABLE ANS_STUDENT
(
 STUDENT_ID INT PRIMARY KEY,
 STUDENT_NAME VARCHAR(20) NOT NULL,
 STUDENT_AGE INTEGER CHECK(STUDENT_AGE<=18),
 COURSE_ID INTEGER FOREIGN KEY REFERENCES ANS_COURSE(COURSE_ID)
);

INSERT INTO ANS_STUDENT VALUES (1,'John Deo',17,1),
(2, 'Max Ruin', 16, 2),
(3, 'Arnold', 16,3);
INSERT INTO ANS_STUDENT VALUES
(4, 'Krish Star', 17, 4),
(5, 'John Mike', 16, 1),
(6, 'Alex John', 17,2),
(7, 'My John Rob',17,3);

Insert INTO ANS_COURSE VALUES(1,'CIVIL');
Insert INTO ANS_COURSE VALUES(2,'CSE');
Insert INTO ANS_COURSE VALUES(3,'ISE');
Insert INTO ANS_COURSE VALUES(4,'ECE');
Insert INTO ANS_COURSE VALUES(5,'MECHANICAL');

SELECT * FROM ANS_STUDENT

SELECT * FROM ANS_COURSE 

SELECT * FROM ANS_STUDENT WHERE STUDENT_AGE=16

SELECT * FROM ANS_STUDENT WHERE STUDENT_NAME LIKE 'M%'

SELECT COUNT(1) AS NO_OF_STUDENTS,COURSE_ID FROM ANS_STUDENT GROUP BY COURSE_ID 

SELECT SUM(STUDENT_AGE) AS SUMAGE,COURSE_ID FROM ANS_STUDENT GROUP BY COURSE_ID HAVING SUM(STUDENT_AGE)>17

SELECT DENSE_RANK () OVER(PARTITION BY COURSE_ID ORDER BY STUDENT_AGE DESC)AS DNSRNK,STUDENT_AGE,COURSE_ID FROM ANS_STUDENT 

SELECT * FROM ANS_STUDENT AS S INNER JOIN ANS_COURSE AS C ON S.COURSE_ID=C.COURSE_ID

SELECT * FROM ANS_STUDENT AS S LEFT JOIN ANS_COURSE AS C ON S.COURSE_ID=C.COURSE_ID

SELECT SUBSTRING(STUDENT_NAME,1,4) AS SUBSTRINGS,STUDENT_NAME FROM ANS_STUDENT T 

SELECT REPLACE(STUDENT_NAME,' ', '@'), STUDENT_NAME FROM ANS_STUDENT 



SELECT CHARINDEX('O',STUDENT_NAME) AS INDEXES, STUDENT_NAME FROM ANS_STUDENT T


--nested query---

SELECT * FROM  S_HREMPLOYEES sh WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID from S_HRDEPARTMENTS sh2 where DEPARTMENT_ID=90)

SELECT * FROM S_HREMPLOYEES sh 

SELECT EMPLOYEE_ID ,DEPARTMENT_ID  FROM  S_HREMPLOYEES sh WHERE  EXISTS (SELECT DEPARTMENT_ID from S_HRDEPARTMENTS sh2 where 
SH.DEPARTMENT_ID=SH2.DEPARTMENT_ID )


SELECT * FROM S_HRDEPARTMENTS sh 



select DEPARTMENT_ID ,DEPARTMENT_NAME from S_HRDEPARTMENTS WHERE DEPARTMENT_ID  in (select DEPARTMENT_ID  from S_HRDEPARTMENTS
WHERE MANAGER_ID= 108)

select DEPARTMENT_ID ,DEPARTMENT_NAME,MANAGER_ID  from S_HRDEPARTMENTS s WHERE EXISTS(select * from S_HRDEPARTMENTS s1
WHERE s.DEPARTMENT_ID =s1.DEPARTMENT_ID  and s1.DEPARTMENT_ID >=120)

UPDATE S_HREMPLOYEES set LAST_NAME ='AAHI' WHERE EXISTS (SELECT * FROM S_HREMPLOYEES WHERE EMPLOYEE_ID=138)
